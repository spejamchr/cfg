#!/usr/bin/env bash
# Select a tinty color scheme with live preview
#
# Pass a filepath to preview highlighting changes for that file.

if [[ "$1" = '--help' || "$1" = '-h' ]]; then
  g="\033[32m" # green
  y="\033[33m" # yellow
  b="\033[1m"  # bold
  c="\033[0m"  # clear

  echo -e "$g""pt$c
Pick a tinty theme with live preview.

$y""USAGE:$c
    pt [FILE]
    pt (--help | -h)

$y""OPTIONS:$c
    $g--help, -h$c
        Show this help message

$y""ARGS:$c
    $g<FILE>$c
        Optional path to a file to render in the preview window.

$y""SEE ALSO:$g
    Tinty$c
        https://github.com/tinted-theming/tinty"

  exit 0
fi

example_file=$1
if [[ ! -f "$example_file" ]]; then
  example_file="$XDG_CONFIG_HOME/tinted-theming/tinty/update-kitty-colors.rb"
fi

original_theme_name=$(tinty current)

theme=$(
  tinty list |
    # Exclude light themes
    grep -v \
      -e light \
      -e cupertino \
      -e cupcake \
      -e brushtrees.sh \
      -e fruit-soda \
      -e github \
      -e shapeshifter \
      -e tomorrow.sh |
    fzf --preview="
    echo '[$original_theme_name] -> [{}]'
    bat --style=changes,numbers --color=always --theme=base16 '$example_file'
    tinty apply '{}'
  "
)

if [[ ! -n "$theme" ]]; then
  theme="$original_theme_name"
fi

# Update the theme asynchronously
(tinty apply "$theme" &)
