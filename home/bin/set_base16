#!/usr/bin/env bash

if [[ "$1" = '--help' || "$1" = '-h' ]]; then
  g="\033[32m" # green
  y="\033[33m" # yellow
  b="\033[1m" # bold
  c="\033[0m" # clear
  location='$BASE16_SHELL/scripts'

  echo -e "$g""set_base16$c
Set a specific base16 theme programmatically for kitty, nvim, and Ãœbersicht.

$y""USAGE:$c
    set_base16 <THEME>
    set_base16 (--help | -h)

$y""OPTIONS:$c
    $g--help, -h$c
        Show this help message

$y""ARGS:$c
    $g<THEME>$c
        The theme to set as found at $g$location/base16-$b<THEME>$c$g.sh$c.

$y""SEE ALSO:$g
    Base16$c
        https://github.com/chriskempson/base16

    $g""pt$c
        Pick a base16 theme with live preview."

  exit 0
fi

theme=$1
path="$BASE16_SHELL"scripts/base16-"$theme".sh

if [[ ! -f "$path" ]]; then
  >&2 echo "Theme not found at: '$path'"
  exit 1
fi

ln -fs "$path" "$HOME/.base16_theme"

echo -e "
if !exists('g:colors_name') || g:colors_name != 'base16-$theme'
  colorscheme base16-$theme
endif
" >| ~/.vimrc_background

if [ -n ${BASE16_SHELL_HOOKS:+s} ] && [ -d "${BASE16_SHELL_HOOKS}" ]; then
  for hook in $BASE16_SHELL_HOOKS/*; do
    [ -f "$hook" ] && [ -x "$hook" ] && "$hook"
  done
fi
